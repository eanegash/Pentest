#!/usr/bin/python

import scapy.all as scapy


#Given an IP address return the MAC adress.
def get_mac(ip):
	arp_request = scapy.ARP(pdst=ip)
	broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
	arp_request_broadcast = broadcast/arp_request
	answered_list = scapy.srp(arp_request_broadcast, timetout=1, verboose=False)[0]
	return answered_list[0][1].hwsrc


#
#
def sniff(interface):
	scapy.sniff(iface=interface, store=False, prn=process_sniffed_packet)


#Packet has an ARP layer and the ARP layer is a response of type 2.
#op=2 means that ARP is sending the response.
def process_sniffed_packet(packet):
	
	if packet.haslayer(scapy.ARP) and packet[scapy.ARP].op == 2:
		try:
			real_mac = get_mac(packet[scapy.ARP].psrc)
			response_mac = packet[scapy.ARP].hwsrc
			
			if real_mac != response_mac:
				print("[+] Machine Under Attack.")	
				
		except IndexError:
			pass	
		except KeyboardInterrupt:
			print("[-] Shutting off ARP Spoof Detector... Please wait.")
			print("[-] Detected CTR + C ... Quitting.")

	print(packet.show())

sniff("en1")
