#!/usr/bin/python

import scapy.all as scapy

# Using Address Resolution Protocol to build a network scanner.
# Create an ARP request directed to broadcast MAC asking for IP.
#	Use ARP to ask who has target IP.
#	Set destination MAC to broadcast MAC.
# Parse the response
def scan(ip):
	#ARP request for a specific IP.Where pdst is the 'Target Protocol Address'
	arp_request = scapy.ARP(pdst=ip)

	# Instance of the  Scapy Ethernet object.
	broadcast = scapy.Ether(dst="ff:ff:ff:ff:ff:ff")
	
	arp_request_broadcast = broadcast/arp_request
	arp_request_broadcast.show()
	
	# Send packet, receive (capture) response, wait for 1 sec. then timeout. 
	answered_list = scapy.srp(arp_request_broadcast, timeout=1)[0]

	return answered_list

# Format the response into a List of Dictionaries
def format_elements(answered):
	client_list = []
	
	for element in answered:
		# print(element[1].show())
		client_dict = {"ip": element[1].psrc, "mac": element[1].hwsrc}
		client_list.append(client_dict)
	
	#print(client_list))
	#print(client_list[0][ip], client_list[0][mac])
	
	return clients_list

# Format and print the elements of the List of Dictionaries
def print_result(results_list):
	print("IP\t\t\tMAC Address\n---------------------------------------------")
	for client in results_list:
		print(client["ip"]+ "\t\t\t" + client["mac"])


answered = scan("10.0.2.1/24")
element_list = format_elements(answered)
print_elements(element_list)

